{"uuid":"d1348e5b-8539-4d85-8d38-661a492b856f","historyId":"b8757ad77d74c4f80b27190fd953814c","testCaseId":"[engine:junit-jupiter]/[class:org.academo.academo.Classic.repository.TaskRepositoryTest]/[method:getAllByUserId_ShouldReturnStudentsTasks()]","testCaseName":"Get Tasks By Student ID - Should return student's tasks","fullName":"org.academo.academo.Classic.repository.TaskRepositoryTest.getAllByUserId_ShouldReturnStudentsTasks","labels":[{"name":"tag","value":"db"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:org.academo.academo.Classic.repository.TaskRepositoryTest]/[method:getAllByUserId_ShouldReturnStudentsTasks()]"},{"name":"host","value":"Rockio"},{"name":"thread","value":"87058@Rockio.main(3)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"org.academo.academo.Classic.repository.TaskRepositoryTest"},{"name":"testClass","value":"org.academo.academo.Classic.repository.TaskRepositoryTest"},{"name":"testMethod","value":"getAllByUserId_ShouldReturnStudentsTasks"},{"name":"suite","value":"Task Repository Integration Tests"}],"links":[],"name":"Get Tasks By Student ID - Should return student's tasks","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Failed to execute SQL script statement #1 of class path resource [db-test/schema.sql]: CREATE TABLE users ( id UUID DEFAULT (RANDOM_UUID()) PRIMARY KEY, full_name VARCHAR(100) NOT NULL, username VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(100) NOT NULL, role VARCHAR(10) NOT NULL, removed_at TIMESTAMP )","trace":"org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [db-test/schema.sql]: CREATE TABLE users ( id UUID DEFAULT (RANDOM_UUID()) PRIMARY KEY, full_name VARCHAR(100) NOT NULL, username VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(100) NOT NULL, role VARCHAR(10) NOT NULL, removed_at TIMESTAMP )\n\tat org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)\n\tat org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)\n\tat org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)\n\tat org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$9(SqlScriptsTestExecutionListener.java:373)\n\tat org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)\n\tat org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n\tat org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:373)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:285)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:285)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:232)\n\tat org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:175)\n\tat org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:320)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:237)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\nCaused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table \"USERS\" already exists; SQL statement:\nCREATE TABLE users ( id UUID DEFAULT (RANDOM_UUID()) PRIMARY KEY, full_name VARCHAR(100) NOT NULL, username VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(100) NOT NULL, role VARCHAR(10) NOT NULL, removed_at TIMESTAMP ) [42101-232]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:514)\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:489)\n\tat org.h2.message.DbException.get(DbException.java:223)\n\tat org.h2.message.DbException.get(DbException.java:199)\n\tat org.h2.command.ddl.CreateTable.update(CreateTable.java:91)\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:139)\n\tat org.h2.command.Command.executeUpdate(Command.java:304)\n\tat org.h2.command.Command.executeUpdate(Command.java:248)\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)\n\tat org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)\n\t... 17 more\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1757420190132,"stop":1757420190135}